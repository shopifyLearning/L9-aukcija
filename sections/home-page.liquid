<div class="home-page-container">
  <h1>Welcome to Levi9 Auction Site</h1>

  <div class="auction2-links">
    
    
    <a href="https://levi9-test.myshopify.com/pages/auction" class="auction2-link">
      Create Auction
    </a>
  </div>
</div>
<div class="auction-list-container">
  <div id="auction-list" class="auction-grid">
 
  </div>
</div>
<div id="pagination" class="pagination"></div>

<script>
  var customerId = {{ customer.id | json }};
</script>

<script>
document.addEventListener("DOMContentLoaded", async () => {
  const auctionListContainer = document.getElementById("auction-list");
  const paginationContainer = document.getElementById("pagination");
  const apiUrl = "https://shopifyauctionapp-hrdhadb3f3f5gpdh.northeurope-01.azurewebsites.net/Auctions";
  const auctionsPerPage = 9;
  let currentPage = 1; 

  function createAuctionCard(auction) {
    const startDate = new Date(auction.startDate).toLocaleString("en-US", { timeZone: "UTC" });
    const endDate = new Date(auction.endDate).toLocaleString("en-US", { timeZone: "UTC" });
    const isExpired = new Date(auction.endDate) < new Date();
    const cardClass = isExpired ? "auction-card expired" : "auction-card";
    const expiredLabel = isExpired ? `<span class="expired-label">Expired</span>` : "";

    return `
      <div class="${cardClass}" onclick="redirectToAuctionPage(${auction.id})">
        <div class="image-wrapper">
          <img src="${auction.imgUrlProduct}" alt="${auction.productTitle}" class="auction-image">
          ${expiredLabel}
        </div>
        <h2>${auction.productTitle}</h2>
        <p><strong>Start Price:</strong> RSD ${auction.startPrice}</p>
        <p><strong>Current Price:</strong> RSD ${auction.currentPrice}</p>
        <p><strong>Start Date:</strong> ${startDate}</p>
        <p><strong>End Date:</strong> ${endDate}</p>
      </div>
    `;
  }

  async function fetchAuctions() {
    try {
      const response = await fetch(apiUrl, {
        method: "GET",
        headers: {
          "Content-Type": "application/json",
          "x-token": "7ca2bd89bc8b479f8e4a08dd14434a81",
        },
      });
      if (!response.ok) throw new Error("Failed to fetch auctions.");
      const auctions = await response.json();

      if (auctions.length === 0) {
        auctionListContainer.innerHTML = "<p>No active auctions at the moment.</p>";
        return;
      }

    
      const now = new Date();
      const sortedAuctions = auctions.sort((a, b) => {
        const aEndDate = new Date(a.endDate);
        const bEndDate = new Date(b.endDate);

        
        if (aEndDate < now && bEndDate < now) return aEndDate - bEndDate; 
        if (aEndDate < now) return 1; 
        if (bEndDate < now) return -1; 
        return aEndDate - bEndDate; 
      });

      const totalPages = Math.ceil(sortedAuctions.length / auctionsPerPage);
      const currentAuctions = sortedAuctions.slice((currentPage - 1) * auctionsPerPage, currentPage * auctionsPerPage);

     
      const auctionCards = currentAuctions.map(createAuctionCard).join("");
      auctionListContainer.innerHTML = auctionCards;

     
      createPagination(totalPages);
    } catch (error) {
      console.error("Error fetching auctions:", error);
      auctionListContainer.innerHTML = `<p>Error loading auctions. Please try again later.</p>`;
    }
  }

  
  function createPagination(totalPages) {
    paginationContainer.innerHTML = ""; 

    if (totalPages <= 1) return; 

    
    for (let i = 1; i <= totalPages; i++) {
      const pageButton = document.createElement("a");
      pageButton.href = "#";
      pageButton.innerText = i;
      pageButton.classList.add("pagination-link");
      if (i === currentPage) {
        pageButton.classList.add("active");
      }
      pageButton.addEventListener("click", (event) => {
        event.preventDefault();
        currentPage = i; 
        fetchAuctions(); 
      });
      paginationContainer.appendChild(pageButton);
    }
  }

  window.redirectToAuctionPage = (auctionId) => {
    const auctionPageUrl = `/pages/auction-details?auctionId=${auctionId}`;
    window.location.href = auctionPageUrl;
  };

  
  fetchAuctions();
});

</script>
