<div class="home-page-container">
  <h1>Welcome to Levi9 Auction Site</h1>
  <div class="auction2-links">
    <a href="https://levi9-test.myshopify.com/pages/auction" class="auction2-link">
      Create Auction
    </a>
    <a href="https://levi9-test.myshopify.com/pages/my-auctions" class="auction2-link">
      My Auctions
    </a>
  </div>
</div>

<div class="auction-list-container">
  <div id="auction-list" class="auction-grid"></div>
</div>

<div id="pagination" class="pagination"></div>

<script>
  var customerId = {{ customer.id | json }};
</script>

<script>
document.addEventListener("DOMContentLoaded", async () => {
  const auctionListContainer = document.getElementById("auction-list");
  const paginationContainer = document.getElementById("pagination");
  const apiUrl = "https://shopifyauctionapp-hrdhadb3f3f5gpdh.northeurope-01.azurewebsites.net/Auctions";
  const auctionsPerPage = 9;
  let currentPage = 1;

  function createAuctionCard(auction) {
    const startDate = new Date(new Date(auction.startDate).getTime() - 60 * 60 * 1000).toLocaleString("en-US");
    const endDate = new Date(new Date(auction.endDate).getTime() - 60 * 60 * 1000).toLocaleString("en-US"); 
    const now = new Date();
    
    // Subtract one hour (60 minutes) from the endDate for expired condition
    const oneHourEarlier = new Date(new Date(auction.endDate).getTime() - 60 * 60 * 1000);
    
    const isExpired = oneHourEarlier < now;  // Aukcija je istekla sat vremena ranije
    const cardClass = isExpired ? "auction-card expired" : "auction-card";
    const expiredLabel = isExpired
        ? `<span class="expired-label">Expired</span>`
        : "";

    return `
      <div class="${cardClass}" onclick="redirectToAuctionPage(${auction.id})">
        <div class="image-wrapper">
          <img src="${auction.imgUrlProduct}" alt="${auction.productTitle}" class="auction-image">
          ${expiredLabel}
        </div>
        <h2>${auction.productTitle}</h2>
        <p><strong>Start Price:</strong> RSD ${auction.startPrice}</p>
        <p><strong>Current Price:</strong> RSD ${auction.currentPrice}</p>
        <p><strong>Start Date:</strong> ${startDate}</p>
        <p><strong>End Date:</strong> ${endDate}</p>
      </div>
    `;
  }

  async function fetchAuctions() {
    try {
      const response = await fetch(apiUrl, {
        method: "GET",
        headers: {
          "Content-Type": "application/json",
          "x-token": "7ca2bd89bc8b479f8e4a08dd14434a81",
        },
      });
      if (!response.ok) throw new Error("Failed to fetch auctions.");
      const auctions = await response.json();

      if (auctions.length === 0) {
      auctionListContainer.innerHTML = "<p>No active auctions at the moment.</p>";
      return;
    }

    const now = new Date();
    
    // Sortiraj aukcije tako da aktivne aukcije budu prvo
    const sortedAuctions = auctions.sort((a, b) => {
      const aEndDate = new Date(a.endDate);
      const bEndDate = new Date(b.endDate);
      const aStartDate = new Date(a.startDate);
      const bStartDate = new Date(b.startDate);
      
      // Oduzmi sat vremena za poređenje
      const oneHourEarlierA = new Date(aEndDate.getTime() - 60 * 60 * 1000);
      const oneHourEarlierB = new Date(bEndDate.getTime() - 60 * 60 * 1000);

      const isExpiredA = oneHourEarlierA < now;
      const isExpiredB = oneHourEarlierB < now;

      if (isExpiredA && !isExpiredB) return 1;  // A je istekla, B nije
      if (!isExpiredA && isExpiredB) return -1; // B je istekla, A nije

      return aEndDate - bEndDate;  // Sortiraj po datumu kraja ako su oba isteka
    });

    const totalPages = Math.ceil(sortedAuctions.length / auctionsPerPage);
    const currentAuctions = sortedAuctions.slice((currentPage - 1) * auctionsPerPage, currentPage * auctionsPerPage);

    const auctionCards = currentAuctions.map(createAuctionCard).join("");
    auctionListContainer.innerHTML = auctionCards;

      createPagination(totalPages);
    } catch (error) {
      console.error("Error fetching auctions:", error);
      auctionListContainer.innerHTML = `<p>Error loading auctions. Please try again later.</p>`;
    }
  }

  function createPagination(totalPages) {
    paginationContainer.innerHTML = ""; 
    if (totalPages <= 1) return;

    const prevButton = document.createElement("a");
    prevButton.href = "#";
    prevButton.innerText = "«";
    prevButton.classList.add("pagination-link");
    if (currentPage === 1) prevButton.classList.add("disabled");
    prevButton.addEventListener("click", (event) => {
      event.preventDefault();
      if (currentPage > 1) {
        currentPage--;
        fetchAuctions();
      }
    });
    paginationContainer.appendChild(prevButton);

    for (let i = 1; i <= totalPages; i++) {
      const pageButton = document.createElement("a");
      pageButton.href = "#";
      pageButton.innerText = i;
      pageButton.classList.add("pagination-link");
      if (i === currentPage) pageButton.classList.add("active");
      pageButton.addEventListener("click", (event) => {
        event.preventDefault();
        currentPage = i;
        fetchAuctions();
      });
      paginationContainer.appendChild(pageButton);
    }

    const nextButton = document.createElement("a");
    nextButton.href = "#";
    nextButton.innerText = "»";
    nextButton.classList.add("pagination-link");
    if (currentPage === totalPages) nextButton.classList.add("disabled");
    nextButton.addEventListener("click", (event) => {
      event.preventDefault();
      if (currentPage < totalPages) {
        currentPage++;
        fetchAuctions();
      }
    });
    paginationContainer.appendChild(nextButton);
  }

  window.redirectToAuctionPage = (auctionId) => {
    const auctionPageUrl = `/pages/auction-details?auctionId=${auctionId}`;
    window.location.href = auctionPageUrl;
  };

  fetchAuctions();
});
</script>
<style>
h1 {
  font-family: 'Arial', sans-serif;
  font-size: 3rem;
  font-weight: bold;
  color: #0D40C4;  /* Plavi ton */
  text-align: center;
  padding: 20px;
  text-transform: uppercase;
  letter-spacing: 2px;
  background-color: #fff;
  box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.1);
  border-radius: 8px;
  margin: 20px auto;
  max-width: 90%;
  transition: all 0.3s ease-in-out;
  opacity: 0;  
  transform: translateX(-100%);  
  animation: slideIn 1s forwards;  
}
  .auction2-links {
  display: flex;
  gap: 20px; 
  justify-content: center; 
  margin-top: 20px;
}

.auction2-link {
  display: inline-block;
  padding: 10px 20px;
  text-decoration: none;
  font-size: 1.4rem;
  color: white;
  background-color: #0D40C4;
  border-radius: 5px;
  font-weight: bold;
  transition: background-color 0.3s, transform 0.2s;
}

.auction2-link:hover {
  background-color: #083a99; 
  transform: scale(1.05); 
}


</style>
