<section class="login-section">
  <div class="login-container">  <!-- New container for centering -->
  <div class="logo-container">
      <img src="{{ 'logo.jpg' | asset_url }}" alt="Logo" class="logo">
    </div>
      {% form 'recover_customer_password' %}
      {{ form.errors | default_errors }}

      <div class="recover-form">
        <div class="email">
          <label for="email">Email</label>
          <input type="email" name="email">
        </div>

        <div class="submit">
          <input type="submit" value="Submit" class="btn">
        </div>
        <div>
          <a href="{{ routes.account_login_url }}">Return to login page</a>
        </div>
      </div>
    {% endform %}

    {% form 'customer_login' %}
      {{ form.errors | default_errors }}

      <div class="login-form">
        <div class="email">
          <input
            placeholder="email"
            type="email"
            name="customer[email]">
        </div>

        <div class="password">
          <input
            type="password"
            name="customer[password]"
            placeholder="password">
        </div>

        <div class="remember-me">
          <input type="checkbox" id="remember-me" name="remember_me">
          <label for="remember-me">Remember me</label>
        </div>

        <a id="recover-password" href="#recover">
          Forgot your password?
        </a>

        <div class="submit">
          <input type="submit" value="Login" class="btn">
        </div>

        <a href="/pages/register">Create account</a>
      </div>
    {% endform %}
  </div>  
  
  <style>

.login-section {
  background-color: #f4f4f4;
  min-height: 100vh;
  display: flex;
  justify-content: center;
  align-items: center;
  padding: 20px;
}



.login-container {
  background-color: #fff;
  padding: 20px;
  border-radius: 8px;
  box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
  width: 100%;
  max-width: 400px;
  box-sizing: border-box;
}
        .logo-container {
  margin-bottom: 15px;
  margin: 0 auto;
  text-align: center;
  display: flex;
  justify-content: center;
  align-items: center;
}

.logo {
  max-width: 100px;
  height: auto;
}


.recover-form, .login-form {
  display: flex;
  flex-direction: column;
  gap: 15px;
}


input[type="email"],
input[type="password"],
input[type="submit"],
input[type="checkbox"] {
  width: 100%;
  padding: 12px;
  margin: 5px 0;
  border-radius: 5px;
  border: 1px solid #ddd;
  box-sizing: border-box;
  font-size: 1.6rem;
  transition: border 0.3s ease;
}


input[type="email"]:focus,
input[type="password"]:focus {
  border-color: #0D40C4;
  outline: none;
}


input[type="submit"] {
  background-color: #0D40C4;
  color: white;
  font-weight: bold;
  border: none;
  cursor: pointer;
  padding: 12px;
  border-radius: 5px;
  font-size: 1.6rem;
  transition: background-color 0.3s ease;
}

input[type="submit"]:hover {
  background-color: #083c92;
}


a {
  text-decoration: none;
  color: #0D40C4;
  font-size: 0.9rem;
  text-align: center;
  margin-top: 10px;
}

a:hover {
  text-decoration: underline;
}


.remember-me {
  display: flex;
  align-items: center;
  gap: 8px;
  font-size: 1.6rem;
  color: #555;
}

.remember-me input[type="checkbox"] {
  width: auto;
  height: auto;
  margin: 0;
}

#recover-password {
  color: #0D40C4;
  font-size: 1.6rem;
  text-align: right;
  margin-top: 10px;
}

#recover-password:hover {
  text-decoration: underline;
}


.form-errors {
  color: red;
  font-size: 1.6rem;
  margin-top: 10px;
}


a[href="/pages/register"] {
  text-align: center;
  display: block;
  margin-top: 20px;
  font-size: 1.6rem;
  color: #0D40C4;
}


a[href="/pages/register"]:hover {
  text-decoration: underline;
}


div {
  margin-bottom: -12px;
}


@media (max-width: 480px) {
  .login-container {
    padding: 20px;
  }

  input[type="email"],
  input[type="password"],
  input[type="submit"],
  input[type="checkbox"] {
    font-size: 1.6rem;
  }

  .remember-me {
    font-size: 0.8rem;
  }

  .submit {
    margin-top: 20px;
  }
}

  </style>
</section>

<script>
  // Function to set a cookie
  function setCookie(cname, cvalue, exdays) {
    const d = new Date();
    d.setTime(d.getTime() + (exdays * 24 * 60 * 60 * 1000)); 
    const expires = "expires=" + d.toUTCString();
    document.cookie = cname + "=" + cvalue + ";" + expires + ";path=/"; 
  }

  // Function to get a cookie value
  function getCookie(cname) {
    const name = cname + "=";
    const decodedCookie = decodeURIComponent(document.cookie);
    const ca = decodedCookie.split(';');
    for (let i = 0; i < ca.length; i++) {
      let c = ca[i];
      while (c.charAt(0) === ' ') {
        c = c.substring(1);
      }
      if (c.indexOf(name) === 0) {
        return c.substring(name.length, c.length); 
      }
    }
    return ""; 
  }

  const loginForm = document.getElementById('customer_login');

  document.addEventListener('DOMContentLoaded', function() {
        var recoverForm = document.querySelector('form[action="/account/recover"]');
    if (recoverForm) {
       recoverForm.style.display = 'none';
    }
    // Check for the remember me cookie and set the email field if it exists
    const storedEmail = getCookie("rememberedEmail");
    if (storedEmail) {
      document.querySelector('input[name="customer[email]"]').value = storedEmail; 
    }

    // Handle form submission
    loginForm.addEventListener('submit', function(event) {
      const rememberMeCheckbox = document.getElementById('remember-me');
      const emailField = document.querySelector('input[name="customer[email]"]');

      sessionStorage.setItem('redirected', 'false'); // Allow redirect
      console.log('Set redirect flag to: ' + sessionStorage.getItem('redirected') ); // Debug log
      if (rememberMeCheckbox.checked) {
        setCookie("rememberedEmail", emailField.value, 30); // Cookie expires in 30 days
      } else {
        setCookie("rememberedEmail", "", -1); // Delete the cookie if not checked
      }
    });

    // Toggle visibility of forms
    const recoverLink = document.getElementById('recover-password');
    const recoverForm = document.querySelector('.recover-form');

    recoverLink.addEventListener('click', function(e) {
      e.preventDefault(); // Prevent default link action
      const isLoginFormVisible = loginForm.style.display !== 'none';

      loginForm.style.display = isLoginFormVisible ? 'none' : 'block';
      recoverForm.style.display = isLoginFormVisible ? 'block' : 'none';
    });
  });
</script>

{% schema %}
  {
    "name": "Login"
  }
{% endschema %}